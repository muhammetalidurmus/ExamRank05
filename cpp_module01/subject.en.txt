Klasör Adı  : cpp_module01
Gerekli Dosyalar   :	Warlock.cpp Warlock.hpp
                 	ASpell.hpp ASpell.cpp
			ATarget.hpp ATarget.cpp
			Fwoosh.hpp Fwoosh.cpp
			Dummy.hpp Dummy.cpp
--------------------------------------------------------------------------------

Warlock sınıfında switch ifadesi YASAKTIR ve kullanılması -42 sonucunu doğuracaktır.

Coplien formunda ASpell adında soyut bir sınıf oluşturun. Bu sınıfın şu korunan özelliklere sahip olması gerekmektedir:

name (string)
effects (string)
Her ikisi de string döndüren getName ve getEffects getter'larına sahip olmalıdır.

Ayrıca, bir ASpell işaretçisi döndüren bir clone saf metodu ekleyin.

Tüm bu işlevler bir sabit nesne üzerinde çağrılabilir olmalıdır.

ASpell'in, adını ve etkilerini sırasıyla alan bir yapıcı metodu olmalıdır.

Şimdi ATarget adında, Coplien formunda soyut bir sınıf oluşturun. Bu sınıfın bir tip (type) özelliği bulunmalıdır ve buna karşılık gelen bir getter olan getType'a sahip olmalıdır.

ASpell gibi, bir clone() saf metodu içermelidir.

Tüm bu işlevler bir sabit nesne üzerinde çağrılabilir olmalıdır.

Bir tip alarak bir yapıcı metodu bulunmalıdır.

Şimdi, ATarget sınıfınıza bir getHitBySpell fonksiyonu ekleyin. Bu fonksiyon, bir referansı alacak ve şunları görüntüleyecektir:

<TYPE> has been <EFFECTS>!

<TYPE>, ATarget'ın tipidir ve <EFFECTS>, ASpell'in getEffects fonksiyonunun dönüşüdür.

Son olarak, ASpell sınıfınıza bir launch fonksiyonu ekleyin. Bu fonksiyon, bir referans alacak ve bu, geçilen nesnenin getHitBySpell'ini çağıracaktır, mevcut örneği parametre olarak geçirerek.

Tüm bunlar yapıldığında, Fwoosh adında bir ASpell implementasyonu oluşturun. Varsayılan yapıcı metodu, adı "Fwoosh" ve etkileri "fwooshed" olarak ayarlayacaktır. Elbette, clone() metodunu da uygulayacaksınız. Fwoosh'un durumunda, yeni bir Fwoosh nesnesine işaret eden bir işaretçi döndürecektir.

Aynı şekilde, "Target Practice Dummy" tipine sahip Dummy adında somut bir ATarget oluşturun. Ayrıca, clone() metodunu da uygulamanız gerekmektedir.

Warlock'a aşağıdaki üye fonksiyonları ekleyin:

learnSpell, ASpell işaretçisini alır, Warlock'un bir büyüyü öğrenmesini sağlar.
forgetSpell, bir büyünün adını alan ve Warlock'un onu unutmasını sağlayan bir fonksiyondur. Bilinen bir büyü değilse hiçbir şey yapmaz.
launchSpell, bir string (bir büyü adı) ve bir ATarget referansını alır, seçilen hedefe büyüyü başlatır. Bilinen bir büyü değilse hiçbir şey yapmaz.
Warlock'un bildiği büyülerin saklanması için yeni bir özellik (attribute) gerekecektir. Birkaç tür bunun için uygun olabilir, en iyisini seçmek size kalmıştır.

Aşağıda, olası bir test main fonksiyonu ve beklenen çıktısı bulunmaktadır:

int main()
{
  Warlock richard("Richard", "the Titled");

  Dummy bob;
  Fwoosh* fwoosh = new Fwoosh();

  richard.learnSpell(fwoosh);

  richard.introduce();
  richard.launchSpell("Fwoosh", bob);

  richard.forgetSpell("Fwoosh");
  richard.launchSpell("Fwoosh", bob);
}

~$ ./a.out | cat -e
Richard: This looks like another boring day.$
Richard: I am Richard, the Titled!$
Target Practice Dummy has been fwooshed!$
Richard: My job here is done!$
